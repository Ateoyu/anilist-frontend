@use "../variables" as *;
@use "sass:color";

/* Character card component styles */
.characterDiv {
  position: relative;
  display: flex;
  flex-direction: column;
  border-radius: $primary-border-radius;
  overflow: hidden;
  transition: all 0.25s ease;
  background-color: color.scale($primary-colour, $lightness: 5%);
  height: 100%;

  &:hover {
    transform: translateY(-3px);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
  }

  &:active {
    transform: translateY(0);
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
  }

  .characterThumbnailContainer {
    position: relative;
    width: 100%;
    padding-bottom: 130%;
    overflow: hidden;

    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(to bottom, transparent 80%, rgba(0, 0, 0, 0.1));
      z-index: 1;
    }

    img {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      object-fit: cover;
      transition: transform 0.5s ease;
    }
  }

  &:hover .characterThumbnailContainer img {
    transform: scale(1.05);
  }

  .characterBriefDetails {
    padding: 10px 8px;
    margin: 0;
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: center;

    dt {
      font-weight: 600;
      font-size: 0.9rem;
      margin-bottom: 4px;
      color: whitesmoke;
      text-align: center;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }

    dd {
      margin: 0;
      font-size: 0.8rem;
      color: color.scale(whitesmoke, $lightness: -15%);
      text-align: center;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }
  }
}

/* Hover and focus states */
.characterDiv:focus-within {
  outline: 2px solid color.scale($primary-colour, $lightness: 30%);
  box-shadow: 0 0 0 2px color.scale($primary-colour, $lightness: 30%, $alpha: -70%);
}
